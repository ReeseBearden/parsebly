# Generated from PythonGrammar.g4 by ANTLR 4.9.2
from antlr4 import *
from io import StringIO
import sys
if sys.version_info[1] > 5:
    from typing import TextIO
else:
    from typing.io import TextIO



def serializedATN():
    with StringIO() as buf:
        buf.write("\3\u608b\ua72a\u8133\ub9ed\u417c\u3be7\u7786\u5964\2;")
        buf.write("\u015e\b\1\4\2\t\2\4\3\t\3\4\4\t\4\4\5\t\5\4\6\t\6\4\7")
        buf.write("\t\7\4\b\t\b\4\t\t\t\4\n\t\n\4\13\t\13\4\f\t\f\4\r\t\r")
        buf.write("\4\16\t\16\4\17\t\17\4\20\t\20\4\21\t\21\4\22\t\22\4\23")
        buf.write("\t\23\4\24\t\24\4\25\t\25\4\26\t\26\4\27\t\27\4\30\t\30")
        buf.write("\4\31\t\31\4\32\t\32\4\33\t\33\4\34\t\34\4\35\t\35\4\36")
        buf.write("\t\36\4\37\t\37\4 \t \4!\t!\4\"\t\"\4#\t#\4$\t$\4%\t%")
        buf.write("\4&\t&\4\'\t\'\4(\t(\4)\t)\4*\t*\4+\t+\4,\t,\4-\t-\4.")
        buf.write("\t.\4/\t/\4\60\t\60\4\61\t\61\4\62\t\62\4\63\t\63\4\64")
        buf.write("\t\64\4\65\t\65\4\66\t\66\4\67\t\67\48\t8\49\t9\4:\t:")
        buf.write("\3\2\3\2\3\3\3\3\3\4\3\4\3\5\3\5\3\6\3\6\3\7\3\7\3\7\3")
        buf.write("\7\3\b\3\b\3\b\3\b\3\t\3\t\3\t\3\t\3\n\3\n\3\n\3\n\3\13")
        buf.write("\3\13\3\13\3\13\3\f\3\f\3\r\3\r\3\r\3\16\3\16\3\16\3\17")
        buf.write("\3\17\3\17\3\20\3\20\3\20\3\21\3\21\3\21\3\21\3\22\3\22")
        buf.write("\3\22\3\22\3\22\3\23\3\23\3\23\3\23\3\23\3\24\3\24\3\24")
        buf.write("\3\24\3\24\3\25\3\25\3\25\3\25\3\25\3\26\3\26\3\27\3\27")
        buf.write("\3\30\3\30\3\30\3\30\3\30\3\30\3\30\3\31\3\31\3\32\3\32")
        buf.write("\3\33\3\33\3\33\3\34\3\34\3\34\3\35\3\35\3\35\3\36\3\36")
        buf.write("\3\36\3\37\3\37\3\37\3 \3 \3 \3!\3!\3\"\3\"\3\"\3\"\3")
        buf.write("#\3#\3#\3#\3$\3$\3$\3$\3$\3%\3%\3%\3%\3%\3&\3&\3&\3&\3")
        buf.write("&\3\'\3\'\3\'\3\'\3\'\3(\3(\3(\3(\3(\3)\3)\3)\3)\3)\3")
        buf.write("*\3*\3*\3+\3+\3+\3+\3,\3,\3-\3-\3-\3-\3-\3-\3.\3.\3.\3")
        buf.write(".\3.\3.\3/\6/\u0119\n/\r/\16/\u011a\3\60\3\60\3\60\3\60")
        buf.write("\3\60\3\60\3\60\3\60\3\60\3\60\3\60\5\60\u0128\n\60\3")
        buf.write("\61\3\61\3\62\6\62\u012d\n\62\r\62\16\62\u012e\3\63\3")
        buf.write("\63\3\63\3\63\3\64\3\64\5\64\u0137\n\64\3\65\3\65\6\65")
        buf.write("\u013b\n\65\r\65\16\65\u013c\3\65\3\65\3\66\3\66\6\66")
        buf.write("\u0143\n\66\r\66\16\66\u0144\3\66\3\66\3\67\6\67\u014a")
        buf.write("\n\67\r\67\16\67\u014b\38\68\u014f\n8\r8\168\u0150\39")
        buf.write("\69\u0154\n9\r9\169\u0155\3:\6:\u0159\n:\r:\16:\u015a")
        buf.write("\3:\3:\2\2;\3\3\5\4\7\5\t\6\13\7\r\b\17\t\21\n\23\13\25")
        buf.write("\f\27\r\31\16\33\17\35\20\37\21!\22#\23%\24\'\25)\26+")
        buf.write("\27-\30/\31\61\32\63\33\65\34\67\359\36;\37= ?!A\"C#E")
        buf.write("$G%I&K\'M(O)Q*S+U,W-Y.[/]\60_\61a\62c\63e\64g\65i\66k")
        buf.write("\67m8o9q:s;\3\2\n\3\2\f\f\4\2C\\c|\3\2\62;\3\2$$\3\2)")
        buf.write(")\5\2\62;C\\c|\3\2\13\13\5\2\f\f\17\17\"\"\2\u0168\2\3")
        buf.write("\3\2\2\2\2\5\3\2\2\2\2\7\3\2\2\2\2\t\3\2\2\2\2\13\3\2")
        buf.write("\2\2\2\r\3\2\2\2\2\17\3\2\2\2\2\21\3\2\2\2\2\23\3\2\2")
        buf.write("\2\2\25\3\2\2\2\2\27\3\2\2\2\2\31\3\2\2\2\2\33\3\2\2\2")
        buf.write("\2\35\3\2\2\2\2\37\3\2\2\2\2!\3\2\2\2\2#\3\2\2\2\2%\3")
        buf.write("\2\2\2\2\'\3\2\2\2\2)\3\2\2\2\2+\3\2\2\2\2-\3\2\2\2\2")
        buf.write("/\3\2\2\2\2\61\3\2\2\2\2\63\3\2\2\2\2\65\3\2\2\2\2\67")
        buf.write("\3\2\2\2\29\3\2\2\2\2;\3\2\2\2\2=\3\2\2\2\2?\3\2\2\2\2")
        buf.write("A\3\2\2\2\2C\3\2\2\2\2E\3\2\2\2\2G\3\2\2\2\2I\3\2\2\2")
        buf.write("\2K\3\2\2\2\2M\3\2\2\2\2O\3\2\2\2\2Q\3\2\2\2\2S\3\2\2")
        buf.write("\2\2U\3\2\2\2\2W\3\2\2\2\2Y\3\2\2\2\2[\3\2\2\2\2]\3\2")
        buf.write("\2\2\2_\3\2\2\2\2a\3\2\2\2\2c\3\2\2\2\2e\3\2\2\2\2g\3")
        buf.write("\2\2\2\2i\3\2\2\2\2k\3\2\2\2\2m\3\2\2\2\2o\3\2\2\2\2q")
        buf.write("\3\2\2\2\2s\3\2\2\2\3u\3\2\2\2\5w\3\2\2\2\7y\3\2\2\2\t")
        buf.write("{\3\2\2\2\13}\3\2\2\2\r\177\3\2\2\2\17\u0083\3\2\2\2\21")
        buf.write("\u0087\3\2\2\2\23\u008b\3\2\2\2\25\u008f\3\2\2\2\27\u0093")
        buf.write("\3\2\2\2\31\u0095\3\2\2\2\33\u0098\3\2\2\2\35\u009b\3")
        buf.write("\2\2\2\37\u009e\3\2\2\2!\u00a1\3\2\2\2#\u00a5\3\2\2\2")
        buf.write("%\u00aa\3\2\2\2\'\u00af\3\2\2\2)\u00b4\3\2\2\2+\u00b9")
        buf.write("\3\2\2\2-\u00bb\3\2\2\2/\u00bd\3\2\2\2\61\u00c4\3\2\2")
        buf.write("\2\63\u00c6\3\2\2\2\65\u00c8\3\2\2\2\67\u00cb\3\2\2\2")
        buf.write("9\u00ce\3\2\2\2;\u00d1\3\2\2\2=\u00d4\3\2\2\2?\u00d7\3")
        buf.write("\2\2\2A\u00da\3\2\2\2C\u00dc\3\2\2\2E\u00e0\3\2\2\2G\u00e4")
        buf.write("\3\2\2\2I\u00e9\3\2\2\2K\u00ee\3\2\2\2M\u00f3\3\2\2\2")
        buf.write("O\u00f8\3\2\2\2Q\u00fd\3\2\2\2S\u0102\3\2\2\2U\u0105\3")
        buf.write("\2\2\2W\u0109\3\2\2\2Y\u010b\3\2\2\2[\u0111\3\2\2\2]\u0118")
        buf.write("\3\2\2\2_\u0127\3\2\2\2a\u0129\3\2\2\2c\u012c\3\2\2\2")
        buf.write("e\u0130\3\2\2\2g\u0136\3\2\2\2i\u0138\3\2\2\2k\u0140\3")
        buf.write("\2\2\2m\u0149\3\2\2\2o\u014e\3\2\2\2q\u0153\3\2\2\2s\u0158")
        buf.write("\3\2\2\2uv\7,\2\2v\4\3\2\2\2wx\7\61\2\2x\6\3\2\2\2yz\7")
        buf.write("-\2\2z\b\3\2\2\2{|\7/\2\2|\n\3\2\2\2}~\7\'\2\2~\f\3\2")
        buf.write("\2\2\177\u0080\7\"\2\2\u0080\u0081\7,\2\2\u0081\u0082")
        buf.write("\7\"\2\2\u0082\16\3\2\2\2\u0083\u0084\7\"\2\2\u0084\u0085")
        buf.write("\7\61\2\2\u0085\u0086\7\"\2\2\u0086\20\3\2\2\2\u0087\u0088")
        buf.write("\7\"\2\2\u0088\u0089\7-\2\2\u0089\u008a\7\"\2\2\u008a")
        buf.write("\22\3\2\2\2\u008b\u008c\7\"\2\2\u008c\u008d\7/\2\2\u008d")
        buf.write("\u008e\7\"\2\2\u008e\24\3\2\2\2\u008f\u0090\7\"\2\2\u0090")
        buf.write("\u0091\7\'\2\2\u0091\u0092\7\"\2\2\u0092\26\3\2\2\2\u0093")
        buf.write("\u0094\7?\2\2\u0094\30\3\2\2\2\u0095\u0096\7-\2\2\u0096")
        buf.write("\u0097\7?\2\2\u0097\32\3\2\2\2\u0098\u0099\7/\2\2\u0099")
        buf.write("\u009a\7?\2\2\u009a\34\3\2\2\2\u009b\u009c\7,\2\2\u009c")
        buf.write("\u009d\7?\2\2\u009d\36\3\2\2\2\u009e\u009f\7\61\2\2\u009f")
        buf.write("\u00a0\7?\2\2\u00a0 \3\2\2\2\u00a1\u00a2\7\"\2\2\u00a2")
        buf.write("\u00a3\7?\2\2\u00a3\u00a4\7\"\2\2\u00a4\"\3\2\2\2\u00a5")
        buf.write("\u00a6\7\"\2\2\u00a6\u00a7\7-\2\2\u00a7\u00a8\7?\2\2\u00a8")
        buf.write("\u00a9\7\"\2\2\u00a9$\3\2\2\2\u00aa\u00ab\7\"\2\2\u00ab")
        buf.write("\u00ac\7/\2\2\u00ac\u00ad\7?\2\2\u00ad\u00ae\7\"\2\2\u00ae")
        buf.write("&\3\2\2\2\u00af\u00b0\7\"\2\2\u00b0\u00b1\7,\2\2\u00b1")
        buf.write("\u00b2\7?\2\2\u00b2\u00b3\7\"\2\2\u00b3(\3\2\2\2\u00b4")
        buf.write("\u00b5\7\"\2\2\u00b5\u00b6\7\61\2\2\u00b6\u00b7\7?\2\2")
        buf.write("\u00b7\u00b8\7\"\2\2\u00b8*\3\2\2\2\u00b9\u00ba\7*\2\2")
        buf.write("\u00ba,\3\2\2\2\u00bb\u00bc\7+\2\2\u00bc.\3\2\2\2\u00bd")
        buf.write("\u00be\7r\2\2\u00be\u00bf\7t\2\2\u00bf\u00c0\7k\2\2\u00c0")
        buf.write("\u00c1\7p\2\2\u00c1\u00c2\7v\2\2\u00c2\u00c3\7*\2\2\u00c3")
        buf.write("\60\3\2\2\2\u00c4\u00c5\7@\2\2\u00c5\62\3\2\2\2\u00c6")
        buf.write("\u00c7\7>\2\2\u00c7\64\3\2\2\2\u00c8\u00c9\7@\2\2\u00c9")
        buf.write("\u00ca\7?\2\2\u00ca\66\3\2\2\2\u00cb\u00cc\7>\2\2\u00cc")
        buf.write("\u00cd\7?\2\2\u00cd8\3\2\2\2\u00ce\u00cf\7?\2\2\u00cf")
        buf.write("\u00d0\7?\2\2\u00d0:\3\2\2\2\u00d1\u00d2\7#\2\2\u00d2")
        buf.write("\u00d3\7?\2\2\u00d3<\3\2\2\2\u00d4\u00d5\7(\2\2\u00d5")
        buf.write("\u00d6\7(\2\2\u00d6>\3\2\2\2\u00d7\u00d8\7~\2\2\u00d8")
        buf.write("\u00d9\7~\2\2\u00d9@\3\2\2\2\u00da\u00db\7#\2\2\u00db")
        buf.write("B\3\2\2\2\u00dc\u00dd\7\"\2\2\u00dd\u00de\7@\2\2\u00de")
        buf.write("\u00df\7\"\2\2\u00dfD\3\2\2\2\u00e0\u00e1\7\"\2\2\u00e1")
        buf.write("\u00e2\7>\2\2\u00e2\u00e3\7\"\2\2\u00e3F\3\2\2\2\u00e4")
        buf.write("\u00e5\7\"\2\2\u00e5\u00e6\7@\2\2\u00e6\u00e7\7?\2\2\u00e7")
        buf.write("\u00e8\7\"\2\2\u00e8H\3\2\2\2\u00e9\u00ea\7\"\2\2\u00ea")
        buf.write("\u00eb\7>\2\2\u00eb\u00ec\7?\2\2\u00ec\u00ed\7\"\2\2\u00ed")
        buf.write("J\3\2\2\2\u00ee\u00ef\7\"\2\2\u00ef\u00f0\7?\2\2\u00f0")
        buf.write("\u00f1\7?\2\2\u00f1\u00f2\7\"\2\2\u00f2L\3\2\2\2\u00f3")
        buf.write("\u00f4\7\"\2\2\u00f4\u00f5\7#\2\2\u00f5\u00f6\7?\2\2\u00f6")
        buf.write("\u00f7\7\"\2\2\u00f7N\3\2\2\2\u00f8\u00f9\7\"\2\2\u00f9")
        buf.write("\u00fa\7(\2\2\u00fa\u00fb\7(\2\2\u00fb\u00fc\7\"\2\2\u00fc")
        buf.write("P\3\2\2\2\u00fd\u00fe\7\"\2\2\u00fe\u00ff\7~\2\2\u00ff")
        buf.write("\u0100\7~\2\2\u0100\u0101\7\"\2\2\u0101R\3\2\2\2\u0102")
        buf.write("\u0103\7\"\2\2\u0103\u0104\7#\2\2\u0104T\3\2\2\2\u0105")
        buf.write("\u0106\7k\2\2\u0106\u0107\7h\2\2\u0107\u0108\7\"\2\2\u0108")
        buf.write("V\3\2\2\2\u0109\u010a\7<\2\2\u010aX\3\2\2\2\u010b\u010c")
        buf.write("\7g\2\2\u010c\u010d\7n\2\2\u010d\u010e\7u\2\2\u010e\u010f")
        buf.write("\7g\2\2\u010f\u0110\7<\2\2\u0110Z\3\2\2\2\u0111\u0112")
        buf.write("\7y\2\2\u0112\u0113\7j\2\2\u0113\u0114\7k\2\2\u0114\u0115")
        buf.write("\7n\2\2\u0115\u0116\7g\2\2\u0116\\\3\2\2\2\u0117\u0119")
        buf.write("\t\2\2\2\u0118\u0117\3\2\2\2\u0119\u011a\3\2\2\2\u011a")
        buf.write("\u0118\3\2\2\2\u011a\u011b\3\2\2\2\u011b^\3\2\2\2\u011c")
        buf.write("\u011d\7u\2\2\u011d\u011e\7v\2\2\u011e\u0128\7t\2\2\u011f")
        buf.write("\u0120\7k\2\2\u0120\u0121\7p\2\2\u0121\u0128\7v\2\2\u0122")
        buf.write("\u0123\7h\2\2\u0123\u0124\7n\2\2\u0124\u0125\7q\2\2\u0125")
        buf.write("\u0126\7c\2\2\u0126\u0128\7v\2\2\u0127\u011c\3\2\2\2\u0127")
        buf.write("\u011f\3\2\2\2\u0127\u0122\3\2\2\2\u0128`\3\2\2\2\u0129")
        buf.write("\u012a\t\3\2\2\u012ab\3\2\2\2\u012b\u012d\t\4\2\2\u012c")
        buf.write("\u012b\3\2\2\2\u012d\u012e\3\2\2\2\u012e\u012c\3\2\2\2")
        buf.write("\u012e\u012f\3\2\2\2\u012fd\3\2\2\2\u0130\u0131\5c\62")
        buf.write("\2\u0131\u0132\7\60\2\2\u0132\u0133\5c\62\2\u0133f\3\2")
        buf.write("\2\2\u0134\u0137\5i\65\2\u0135\u0137\5k\66\2\u0136\u0134")
        buf.write("\3\2\2\2\u0136\u0135\3\2\2\2\u0137h\3\2\2\2\u0138\u013a")
        buf.write("\7$\2\2\u0139\u013b\n\5\2\2\u013a\u0139\3\2\2\2\u013b")
        buf.write("\u013c\3\2\2\2\u013c\u013a\3\2\2\2\u013c\u013d\3\2\2\2")
        buf.write("\u013d\u013e\3\2\2\2\u013e\u013f\7$\2\2\u013fj\3\2\2\2")
        buf.write("\u0140\u0142\7)\2\2\u0141\u0143\n\6\2\2\u0142\u0141\3")
        buf.write("\2\2\2\u0143\u0144\3\2\2\2\u0144\u0142\3\2\2\2\u0144\u0145")
        buf.write("\3\2\2\2\u0145\u0146\3\2\2\2\u0146\u0147\7)\2\2\u0147")
        buf.write("l\3\2\2\2\u0148\u014a\t\3\2\2\u0149\u0148\3\2\2\2\u014a")
        buf.write("\u014b\3\2\2\2\u014b\u0149\3\2\2\2\u014b\u014c\3\2\2\2")
        buf.write("\u014cn\3\2\2\2\u014d\u014f\t\7\2\2\u014e\u014d\3\2\2")
        buf.write("\2\u014f\u0150\3\2\2\2\u0150\u014e\3\2\2\2\u0150\u0151")
        buf.write("\3\2\2\2\u0151p\3\2\2\2\u0152\u0154\t\b\2\2\u0153\u0152")
        buf.write("\3\2\2\2\u0154\u0155\3\2\2\2\u0155\u0153\3\2\2\2\u0155")
        buf.write("\u0156\3\2\2\2\u0156r\3\2\2\2\u0157\u0159\t\t\2\2\u0158")
        buf.write("\u0157\3\2\2\2\u0159\u015a\3\2\2\2\u015a\u0158\3\2\2\2")
        buf.write("\u015a\u015b\3\2\2\2\u015b\u015c\3\2\2\2\u015c\u015d\b")
        buf.write(":\2\2\u015dt\3\2\2\2\r\2\u011a\u0127\u012e\u0136\u013c")
        buf.write("\u0144\u014b\u0150\u0155\u015a\3\b\2\2")
        return buf.getvalue()


class PythonGrammarLexer(Lexer):

    atn = ATNDeserializer().deserialize(serializedATN())

    decisionsToDFA = [ DFA(ds, i) for i, ds in enumerate(atn.decisionToState) ]

    T__0 = 1
    T__1 = 2
    T__2 = 3
    T__3 = 4
    T__4 = 5
    T__5 = 6
    T__6 = 7
    T__7 = 8
    T__8 = 9
    T__9 = 10
    T__10 = 11
    T__11 = 12
    T__12 = 13
    T__13 = 14
    T__14 = 15
    T__15 = 16
    T__16 = 17
    T__17 = 18
    T__18 = 19
    T__19 = 20
    T__20 = 21
    T__21 = 22
    T__22 = 23
    T__23 = 24
    T__24 = 25
    T__25 = 26
    T__26 = 27
    T__27 = 28
    T__28 = 29
    T__29 = 30
    T__30 = 31
    T__31 = 32
    T__32 = 33
    T__33 = 34
    T__34 = 35
    T__35 = 36
    T__36 = 37
    T__37 = 38
    T__38 = 39
    T__39 = 40
    T__40 = 41
    T__41 = 42
    T__42 = 43
    T__43 = 44
    T__44 = 45
    NEWLINE = 46
    CAST = 47
    CHAR = 48
    INT = 49
    FLOAT = 50
    STRING = 51
    DSTRING = 52
    SSTRING = 53
    STR = 54
    ID = 55
    TAB = 56
    WS = 57

    channelNames = [ u"DEFAULT_TOKEN_CHANNEL", u"HIDDEN" ]

    modeNames = [ "DEFAULT_MODE" ]

    literalNames = [ "<INVALID>",
            "'*'", "'/'", "'+'", "'-'", "'%'", "' * '", "' / '", "' + '", 
            "' - '", "' % '", "'='", "'+='", "'-='", "'*='", "'/='", "' = '", 
            "' += '", "' -= '", "' *= '", "' /= '", "'('", "')'", "'print('", 
            "'>'", "'<'", "'>='", "'<='", "'=='", "'!='", "'&&'", "'||'", 
            "'!'", "' > '", "' < '", "' >= '", "' <= '", "' == '", "' != '", 
            "' && '", "' || '", "' !'", "'if '", "':'", "'else:'", "'while'" ]

    symbolicNames = [ "<INVALID>",
            "NEWLINE", "CAST", "CHAR", "INT", "FLOAT", "STRING", "DSTRING", 
            "SSTRING", "STR", "ID", "TAB", "WS" ]

    ruleNames = [ "T__0", "T__1", "T__2", "T__3", "T__4", "T__5", "T__6", 
                  "T__7", "T__8", "T__9", "T__10", "T__11", "T__12", "T__13", 
                  "T__14", "T__15", "T__16", "T__17", "T__18", "T__19", 
                  "T__20", "T__21", "T__22", "T__23", "T__24", "T__25", 
                  "T__26", "T__27", "T__28", "T__29", "T__30", "T__31", 
                  "T__32", "T__33", "T__34", "T__35", "T__36", "T__37", 
                  "T__38", "T__39", "T__40", "T__41", "T__42", "T__43", 
                  "T__44", "NEWLINE", "CAST", "CHAR", "INT", "FLOAT", "STRING", 
                  "DSTRING", "SSTRING", "STR", "ID", "TAB", "WS" ]

    grammarFileName = "PythonGrammar.g4"

    def __init__(self, input=None, output:TextIO = sys.stdout):
        super().__init__(input, output)
        self.checkVersion("4.9.2")
        self._interp = LexerATNSimulator(self, self.atn, self.decisionsToDFA, PredictionContextCache())
        self._actions = None
        self._predicates = None


